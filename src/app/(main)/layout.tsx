import { Sidebar } from '@/components';
import { SquaresPlusIcon } from '@/icons';
import { SidebarOptionProps } from '@/interfaces';
import type { Metadata } from 'next';
import { NextIntlClientProvider } from 'next-intl';
import { getLocale, getMessages } from 'next-intl/server';
import localFont from 'next/font/local';
import '../globals.css';
import Providers from '../providers';

const geistSans = localFont({
  src: '../fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900'
});
const geistMono = localFont({
  src: '../fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900'
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
};

export default async function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();
  const messages = await getMessages();

  const sidebarOptions: SidebarOptionProps[] = [
    {
      label: 'Overview',
      icon: <SquaresPlusIcon className='size-4' />,
      title: 'Platform',
      childrenOptions: [
        {
          label: 'History',
          href: '/'
        }, {
          label: 'Starred',
          href: '/starred'
        }, {
          label: 'Settings',
          href: '/settings'
        }
      ]
    }, {
      label: 'Overview',
      icon: <SquaresPlusIcon className='size-4' />,
      childrenOptions: [
        {
          label: 'History',
          href: '/'
        }, {
          label: 'Starred',
          href: '/starred'
        }, {
          label: 'Settings',
          href: '/settings'
        }
      ]
    }
  ];

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages}>
          <Providers>
            <div className="flex min-h-svh w-full">
              <Sidebar options={sidebarOptions} isOpen />
              <main className='relative flex min-h-svh flex-1 flex-col bg-light dark:bg-dark'>
                {children}
              </main>
            </div>
          </Providers>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}